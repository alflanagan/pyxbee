#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Thu Mar  8 07:55:58 2012 from "/home/lloyd/python-environments/pyxbee/workspace/Pyxb/src/com/alloydflanagan/pyxb/ui/ShowArgs"

import wx

# begin wxGlade: extracode
# end wxGlade



class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_1 = wx.Panel(self, wx.ID_ANY)
        self.txtOut = wx.TextCtrl(self.panel_1, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY)
        self.btnClose = wx.Button(self.panel_1, wx.ID_ANY, "Close")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnClose, self.btnClose)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("ShowArgs")
        self.txtOut.SetMinSize((600,300))
        self.txtOut.SetBackgroundColour(wx.Colour(216, 216, 191))
        self.btnClose.SetMinSize((90, 30))
        self.btnClose.SetBackgroundColour(wx.Colour(154, 255, 194))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.FlexGridSizer(2, 1, 10, 0)
        sizer_2.Add(self.txtOut, 1, wx.ALL | wx.EXPAND, 0)
        sizer_2.Add(self.btnClose, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL | wx.FIXED_MINSIZE, 11)
        self.panel_1.SetSizer(sizer_2)
        sizer_2.AddGrowableRow(0)
        sizer_2.AddGrowableCol(0)
        sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade
      
    def OnClose(self, event): # wxGlade: MyFrame.<event_handler>
        self.Hide()
        self.Close()

    def SetValueLines(self, strIter):
        newVal = ""
        for x in strIter:
            newVal = "{}\n\n{}".format(newVal, x) 
        self.txtOut.SetValue(newVal)
# end of class MyFrame


class ShowArgs(wx.App):
    '''An app that pops up a window and displays its command-line arguments.
    Why? I needed a way to debug launch configurations in Eclipse. Maybe it
    will be useful again.'''
    def OnInit(self):
        wx.InitAllImageHandlers()
        frame_1 = MyFrame(None, -1, "")
        self.SetTopWindow(frame_1)
        frame_1.Show()
        return 1
# end of class ShowArgs

if __name__ == "__main__":
    import sys
    ShowArgs = ShowArgs(0)
    ShowArgs.GetTopWindow().SetValueLines(sys.argv)
    ShowArgs.MainLoop()
